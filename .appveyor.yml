# This file is based on
# https://github.com/Ifsttar/I-Simpa/blob/master/appveyor.yml

image:
 - Visual Studio 2019

version: '20.06.6_unofficial_{build}'

# clone directory
clone_folder: c:\projects\wxMaxima
# Do not clone the entire git repository
clone_depth: 15

environment:
  # The wxWidgets version as referred to in the source package
  WXVERSION: 3.1.3
  # The wxWidgets version as referred to in the build folder
  # Typically it'd be the wxWidgets version with an optional suffix
  # to indicate build "epoch". The epoch changes are used to invalidate
  # a cached wxWidgets build and force a rebuild.
  WXBUILDVER: 3.1.3_6
  CMAKEGEN: "Ninja"

cache:
  - 'C:\wxwidgets-install_%WXBUILDVER%'
  - C:\ProgramData\chocolatey\bin -> appveyor.yml
  - C:\ProgramData\chocolatey\lib -> appveyor.yml
  # Do not cache the build itself - we only care about the install!

# branches to build
branches:
  except:
  - gh_pages
  - DebianPackaging
  - DebianPackaging_NightlyBuild

install:
  - ps: |
      # We write out a script that pulls in Visual Studio variables
      echo @'
      echo '- Setting environment variables for Visual Studio'
      cmd.exe /c "call `"C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat`" && set > %temp%\vcvars.txt"
      Get-Content "$env:temp\vcvars.txt" | Foreach-Object {
        if ($_ -match "^(.*?)=(.*)$") {
          Set-Content "env:\$($matches[1])" $matches[2]
        }
      }
      '@>> vcvars.ps1
      
      echo '- Installing pandoc...'
      choco install -y --no-progress pandoc

before_build:
  - ps: |
      .\vcvars.ps1
      refreshenv
      $SRC_ARCHIVE="wxWidgets-${env:WXVERSION}.7z"
      $BUILD_DIR="C:\wxwidgets-build_${env:WXBUILDVER}"
      $INSTALL_DIR="C:\wxwidgets-install_${env:WXBUILDVER}"
      $SOURCE_DIR="C:\wxwidgets-source_${env:WXVERSION}"
      
      # If there's no installation of wxWidgets available, we have to build it
      if (!(Test-Path $INSTALL_DIR)) {
          echo '- No wxWidgets installation $INSTALL_DIR was found'
          
          echo '* Downloading wxWidgets sources'
          Start-FileDownload "https://github.com/wxWidgets/wxWidgets/releases/download/v${env:WXVERSION}/$SRC_ARCHIVE"
          
          echo '* Unpacking wxWidgets sources'
          7z x "$SRC_ARCHIVE" "-o$SOURCE_DIR" -y
          
          echo '* Building wxWidgets from sources'
          mkdir $BUILD_DIR | Out-Null
          pushd $BUILD_DIR
          # Note: wxWidgets unity builds fail at least for version 3.1.3. This is a fixable problem but would
          # require patching the CMakeLists there. So for now it's disabled, since we don'y rebuild wxWidgets
          # often.
          cmake -G "$env:CMAKEGEN" -DwxBUILD_SHARED=NO -DwxUSE_STC=NO --config Release "-DCMAKE_INSTALL_PREFIX=$INSTALL_DIR" "$SOURCE_DIR"
          cmake --build . --config Release
          cmake --build . --config Release --target install
          popd
      }
      
      echo '- Configuring wxMaxima'
      mkdir build | Out-Null
      pushd build
      cmake -G "$env:CMAKEGEN" -DAPPVEYOR_BUILD=1 -DCMAKE_UNITY_BUILD=YES --config Release -DwxWidgets_ROOT_DIR="$INSTALL_DIR" -D CMAKE_CXX_FLAGS="/EHsc /D_UNICODE=1" -DwxWidgets_CONFIGURATION=mswu ..
      popd

build_script:
  - ps: |
      echo '- Building wxMaxima'
      .\vcvars.ps1
      pushd build
      cmake --build . --config Release
      if (! $?) { throw "CMake failed with exit code $LastExitCode" }
      popd

test_script:
  - ps: |
      pushd build
      #ctest -C Release
      if (! $?) { throw "CTest failed with exit code $LastExitCode" }
      popd

after_test:
  - ps: |
      echo '* Packing the installer'
      pushd build
      cpack -G NSIS
      if (! $?) { throw "CPack failed with exit code $LastExitCode" }
      popd

on_failure:
  - ps: |
      pushd build
      7z a FailureDump.zip *
      Push-AppveyorArtifact FailureDump.zip
      popd

artifacts:
  - path: 'build\wxmaxima-*.exe'
    name: wxMaxima_Installer

deploy:
  - provider: Environment
    name: GithubReleases
    draft: false
    prerelease: false
    on:
      APPVEYOR_REPO_TAG: true
